@model InMemDbPizza.Models.CreateDishViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>Dish</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Dish.Name" class="control-label"></label>
                <input asp-for="Dish.Name" class="form-control" />
                <span asp-validation-for="Dish.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Dish.Price" class="control-label"></label>
                <input asp-for="Dish.Price" class="form-control" />
                <span asp-validation-for="Dish.Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select asp-for="Dish.Category" asp-items="@Model.Categories"></select>
            </div>
            <div class="form-group">
                <label asp-for="IngredientsChoices" class="control-label"></label>
                @for (int i = 0; i < Model.IngredientsChoices.Count; i++)
                {
                    <div class="form-check">
                        @Html.HiddenFor(x => x.IngredientsChoices[i].Ingredient.Name)
                        @Html.CheckBoxFor(x => x.IngredientsChoices[i].Checked, new { @class = "form-check-input" })
                        @Html.LabelFor(x => x.IngredientsChoices[i].Checked, Model.IngredientsChoices[i].Ingredient.Name, new { @class = "form-check-label" })
                    </div>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
